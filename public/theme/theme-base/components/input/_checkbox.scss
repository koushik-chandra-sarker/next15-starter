@use "../../../themes/tailwind/tailwind-light/variables";
@use "../../mixins";

//core
.p-checkbox {
    position: relative;
    display: inline-flex;
    user-select: none;
    vertical-align: bottom;
}

.p-checkbox-input {
    appearance: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    opacity: 0;
    z-index: 1;
    outline: 0 none;
    cursor: pointer;
}

.p-checkbox-box {
    display: flex;
    justify-content: center;
    align-items: center;
}

// theme
.p-checkbox {
    width: variables.$checkboxWidth;
    height: variables.$checkboxHeight;

    .p-checkbox-input {
        border: variables.$checkboxBorder;
        border-radius: variables.$borderRadius;
    }

    .p-checkbox-box {
        border: variables.$checkboxBorder;
        background: variables.$inputBg;
        width: variables.$checkboxWidth;
        height: variables.$checkboxHeight;
        color: variables.$textColor;
        border-radius: variables.$borderRadius;
        transition: variables.$formElementTransition;
        outline-color: transparent;

        .p-checkbox-icon {
            transition-duration: variables.$transitionDuration;
            color: variables.$checkboxIconActiveColor;
            font-size: variables.$checkboxIconFontSize;

            &.p-icon {
                width: variables.$checkboxIconFontSize;
                height: variables.$checkboxIconFontSize;
            }
        }
    }

    .p-checkbox-box {
        border: variables.$checkboxBorder;
        background: variables.$inputBg;
        width: variables.$checkboxWidth;
        height: variables.$checkboxHeight;
        color: variables.$textColor;
        border-radius: variables.$borderRadius;
        transition: variables.$formElementTransition;
        outline-color: transparent;

        .p-checkbox-icon {
            transition-duration: variables.$transitionDuration;
            color: variables.$checkboxIconActiveColor;
            font-size: variables.$checkboxIconFontSize;

            &.p-icon {
                width: variables.$checkboxIconFontSize;
                height: variables.$checkboxIconFontSize;
            }
        }
    }
    

    &.p-highlight {
        .p-checkbox-box {
            border-color: variables.$checkboxActiveBorderColor;
            background: variables.$checkboxActiveBg;
        }  
    }

    &:not(.p-disabled) {
        &:has(.p-checkbox-input:hover) {
            .p-checkbox-box {
                border-color: variables.$inputHoverBorderColor;
            }

            &.p-highlight {
                .p-checkbox-box {
                    border-color: variables.$checkboxActiveHoverBorderColor;
                    background: variables.$checkboxActiveHoverBg;
                    color: variables.$checkboxIconActiveHoverColor;
                }
            }
        }

        &:has(.p-checkbox-input:focus-visible) {
            .p-checkbox-box {
                @include mixins.focused-input();
            }
        }
    }

    &.p-invalid > .p-checkbox-box {
        @include mixins.invalid-input();
    }

    &.p-variant-filled {
        .p-checkbox-box {
            background-color: variables.$inputFilledBg;
        }

        &.p-highlight {
            .p-checkbox-box {
                background: variables.$checkboxActiveBg;
            }
        }

        &:not(.p-disabled) {
            &:has(.p-checkbox-input:hover) {
                .p-checkbox-box {
                    background-color: variables.$inputFilledHoverBg;
                }
    
                &.p-highlight {
                    .p-checkbox-box {
                        background: variables.$checkboxActiveHoverBg;
                    }
                }
            }
        }
    }
}

.p-input-filled {
    .p-checkbox {
        .p-checkbox-box {
            background-color: variables.$inputFilledBg;
        }

        &.p-highlight {
            .p-checkbox-box {
                background: variables.$checkboxActiveBg;
            }
        }

        &:not(.p-disabled) {
            &:has(.p-checkbox-input:hover) {
                .p-checkbox-box {
                    background-color: variables.$inputFilledHoverBg;
                }

                &.p-highlight {
                    .p-checkbox-box {
                        background: variables.$checkboxActiveHoverBg;
                    }
                }
            }
        }
    }
}

@if (variables.$highlightBg == variables.$checkboxActiveBg) {
    .p-highlight {
        .p-checkbox {
            .p-checkbox-box {
                border-color: variables.$checkboxIconActiveColor;
            }
        }
    }
}
